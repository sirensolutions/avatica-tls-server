#!/usr/bin/env groovy
library 'jenkins-lib'

pipeline {

  agent {
    kubernetes {
      cloud getKubernetesClusterName()
      yaml readK8sConfig('build', '4Gi', '1')
    }
  }

  options {
    timestamps()
    ansiColor('xterm')
  }

  stages {
    stage ('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Publish to Artifactory') {
      steps {
        withCredentials([
          [
            $class: 'UsernamePasswordMultiBinding',
            credentialsId: 'artifactory-sirenpublisher',
            passwordVariable: 'PASSWORD',
            usernameVariable: 'USERNAME'
          ]
        ]) {
            sh '''#!/bin/bash
               mvn -DskipTests=true \
                -P artifactory \
                -Dartifactory_username=$USERNAME \
                -Dartifactory_password=$PASSWORD \
                deploy
            '''
        }
      }
    }

    stage('Publish to Docker Hub') {
      steps {
        withCredentials([
          [
            $class: 'UsernamePasswordMultiBinding',
            credentialsId: 'dockerhub-publisher',
            passwordVariable: 'PASSWORD',
            usernameVariable: 'USERNAME'
          ]
        ]) {
          sh '''#!/bin/bash
            set -e
            export VERSION=`mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec`
            echo "${PASSWORD}" | buildah login -u "${USERNAME}" --password-stdin docker.io
            buildah bud --format docker -t "sirensolutions/avatica-tls-server:${VERSION}" .
            buildah push "sirensolutions/avatica-tls-server:${VERSION}"
          '''
        }
      }
    }
  }

}
